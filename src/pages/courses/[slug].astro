---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const courses = await getCollection("courses");
  return courses.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the entry directly from the prop on render
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
  <Container>
    <div class="mx-auto max-w-3xl mt-14">
      <span class="text-blue-400 uppercase tracking-wider text-sm font-medium">
        {entry.data.courseCode}
      </span>
      <h1
        class="text-xl lg:text-2xl font-bold lg:tracking-tight mt-1 mb-4 lg:leading-tight">
        {entry.data.title}
      </h1>
      <div class="max-w-screen-sm text-sm text-slate-600">
        <table class="w-full">
          <tr>
            <td class="p-1">Pre-requisites</td>
            <td class="p-1">{(entry.data.prerequisites && entry.data.prerequisites.join(", ")) || "None"}</td>
          </tr>
          <tr>
            <td class="p-1">Co-requisites</td>
            <td class="p-1">{(entry.data.corequisites && entry.data.corequisites.join(", ")) || "None"}</td>
          </tr>
          <tr>
            <td class="p-1">Instructional Hours</td>
            <td class="p-1">{entry.data.courseHours || 40}</td>
          </tr>
          <tr>
            <td class="p-1">Instructional Mode</td>
            <td class="p-1">{entry.data.courseType || "Lecture"}</td>
          </tr>
          <tr>
            <td class="p-1">Delivery Mode</td>
            <td class="p-1">{(entry.data.deliveryMode && entry.data.deliveryMode.join(" / ")) || "In-Person"}</td>
          </tr>
        </table>
      </div>
      
      <!-- 
      <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap">
        <span class="text-gray-400">
          {entry.data.author}
        </span>
        <span class="text-gray-400">•</span>
        <time
          class="text-gray-400"
          datetime={entry.data.publishDate.toISOString()}>
          {entry.data.publishDate.toDateString()}
        </time>
        <span class="text-gray-400 hidden md:block">•</span>
        <div class="w-full md:w-auto flex flex-wrap gap-3">
          {
            entry.data.tags.map((tag) => (
              <span class="text-sm text-gray-500">#{tag}</span>
            ))
          }
        </div>
      </div>
      -->
    </div>

    <div class="mx-auto prose prose-sm mt-6 max-w-3xl">
      <Content />
    </div>
    <div class="text-center mt-14">
      <a
        href="/array51/courses"
        class="bg-gray-100 px-5 py-3 rounded-sm hover:bg-gray-200 transition"
        >← All Courses</a
      >
    </div>
  </Container>
</Layout>
